# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-emulation/qemu:accessibility - Adds support for braille displays using brltty
app-emulation/qemu:aio - Enables support for Linux's Async IO
app-emulation/qemu:alsa - Enable alsa output for sound emulation
app-emulation/qemu:capstone - Enable disassembly support with dev-libs/capstone
app-emulation/qemu:curl - Support ISOs / -cdrom directives via HTTP or HTTPS.
app-emulation/qemu:fdt - Enables firmware device tree support
app-emulation/qemu:fuse - Enables FUSE block device export
app-emulation/qemu:glusterfs - Enables GlusterFS cluster fileystem via sys-cluster/glusterfs
app-emulation/qemu:gnutls - Enable TLS support for the VNC console server. For 1.4 and newer this also enables WebSocket support. For 2.0 through 2.3 also enables disk quorum support.
app-emulation/qemu:io-uring - Enable efficient I/O via sys-libs/liburing.
app-emulation/qemu:iscsi - Enable direct iSCSI support via net-libs/libiscsi instead of indirectly via the Linux block layer that sys-block/open-iscsi does.
app-emulation/qemu:jemalloc - Enable jemalloc allocator support
app-emulation/qemu:jpeg - Enable jpeg image support for the VNC console server
app-emulation/qemu:multipath - Enable multipath persistent reservation passthrough via sys-fs/multipath-tools.
app-emulation/qemu:ncurses - Enable the ncurses-based console
app-emulation/qemu:nfs - Enable NFS support
app-emulation/qemu:numa - Enable NUMA support
app-emulation/qemu:pin-upstream-blobs - Pin the versions of BIOS firmware to the version included in the upstream release. This is needed to sanely support migration/suspend/resume/snapshotting/etc... of instances. When the blobs are different, random corruption/bugs/crashes/etc... may be observed.
app-emulation/qemu:plugins - Enable qemu plugin API via shared library loading.
app-emulation/qemu:png - Enable png image support for the VNC console server
app-emulation/qemu:pulseaudio - Enable pulseaudio output for sound emulation
app-emulation/qemu:rbd - Enable rados block device backend support, see http://ceph.newdream.net/wiki/QEMU-RBD
app-emulation/qemu:sdl - Enable the SDL-based console
app-emulation/qemu:sdl-image - SDL Image support for icons
app-emulation/qemu:slirp - Enable TCP/IP in hypervisor via net-libs/libslirp
app-emulation/qemu:spice - Enable Spice protocol support via app-emulation/spice
app-emulation/qemu:ssh - Enable SSH based block device support via net-libs/libssh2
app-emulation/qemu:static - Build the User and Software MMU (system) targets as well as tools as static binaries
app-emulation/qemu:static-user - Build the User targets as static binaries
app-emulation/qemu:systemtap - Enable SystemTAP/DTrace tracing
app-emulation/qemu:tci - Enable the TCG Interpreter which can speed up or slowdown workloads depending on the host and guest CPUs being emulated. In the future it will be a runtime option but for now its compile time.
app-emulation/qemu:usb - Enable USB passthrough via dev-libs/libusb
app-emulation/qemu:usbredir - Use sys-apps/usbredir to redirect USB devices to another machine over TCP
app-emulation/qemu:vde - Enable VDE-based networking
app-emulation/qemu:vhost-net - Enable accelerated networking using vhost-net, see http://www.linux-kvm.org/page/VhostNet
app-emulation/qemu:vhost-user-fs - Enable shared file system access using the FUSE protocol carried over virtio.
app-emulation/qemu:virgl - Enable experimental Virgil 3d (virtual software GPU)
app-emulation/qemu:virtfs - Enable VirtFS via virtio-9p-pci / fsdev. See http://wiki.qemu.org/Documentation/9psetup
app-emulation/qemu:vte - Enable terminal support (x11-libs/vte) in the GTK+ interface
app-emulation/qemu:xattr - Add support for getting and setting POSIX extended attributes, through sys-apps/attr. Requisite for the virtfs backend.
app-emulation/qemu:xen - Enables support for Xen backends
app-emulation/qemu:xfs - Support xfsctl() notification and syncing for XFS backed virtual disks.
app-shells/bash:bashlogger - Log ALL commands typed into bash; should ONLY be used in restricted environments such as honeypots
app-shells/bash:mem-scramble - Build with custom malloc/free overwriting allocated/freed memory
app-shells/bash:net - Enable /dev/tcp/host/port redirection
app-shells/bash:plugins - Add support for loading builtins at runtime via 'enable'
dev-lang/perl:ithreads - Enable Perl threads, has some compatibility problems
dev-lang/spidermonkey:clang - Use Clang compiler instead of GCC
dev-lang/spidermonkey:custom-optimization - Build with user-specified compiler optimizations (-Os, -O0, -O1, -O2, -O3) from CFLAGS (unsupported)
dev-lang/spidermonkey:debug - Enable assertions to allow for easier debugging of programs that link to spidermonkey -- note this will often crash software on regular end-user systems
dev-lang/spidermonkey:lto - Enable Link Time Optimization (LTO)
dev-lang/spidermonkey:system-icu - Use the system-wide dev-libs/icu instead of bundled -- note, only takes effect when icu flag is enabled
dev-libs/libffi:exec-static-trampoline - Don't rely on dynamic code generation for trampolines.
dev-libs/libffi:pax-kernel - Use PaX emulated trampolines, for we can't use PROT_EXEC
dev-libs/openssl:asm - Support assembly hand optimized crypto functions (i.e. faster run time)
dev-libs/openssl:bindist - Disable/Restrict EC algorithms (as they seem to be patented) -- note: changes the ABI
dev-libs/openssl:ktls - Enable support for Kernel implementation of TLS (kTLS)
dev-libs/openssl:rfc3779 - Enable support for RFC 3779 (X.509 Extensions for IP Addresses and AS Identifiers)
dev-libs/openssl:sslv2 - Support for the old/insecure SSLv2 protocol -- note: not required for TLS/https
dev-libs/openssl:sslv3 - Support for the old/insecure SSLv3 protocol -- note: not required for TLS/https
dev-libs/openssl:tls-compression - Enable support for discouraged TLS compression
dev-libs/openssl:tls-heartbeat - Enable the Heartbeat Extension in TLS and DTLS
dev-libs/userspace-rcu:regression-test - Run regression tests (requires FEATURES=test)
dev-util/catalyst:ccache - Enables ccache support
dev-util/catalyst:iso - Pulls in the depends for building iso images
dev-util/catalyst:system-bootloader - Pulls in the depends needed to setup livecd bootloader from the host system rather than using a cdtar
dev-util/strace:aio - Enable dev-libs/libaio support for tracing Asynchronous I/O operations
dev-util/strace:elfutils - Enable stack backtraces (-k flag) via dev-libs/elfutils
dev-util/strace:unwind - Enable stack backtraces (-k flag) via sys-libs/libunwind
media-libs/x264:10bit - Set output bit depth to 10, this may not be compatible with all decoders
media-libs/x264:interlaced - enable interlaced encoding support, this can decrease encoding speed by up to 2%
media-libs/x264:opencl - Add support for OpenCL.
media-libs/x264:pic - disable optimized assembly code that is not PIC friendly
net-misc/ntp:openntpd - Allow ntp to be installed alongside openntpd
net-misc/ntp:parse-clocks - Add support for PARSE clocks
net-misc/ntp:samba - Provide support for Samba's signing daemon (needed for Active Directory domain controllers)
sys-apps/systemd:apparmor - Enable AppArmor support
sys-apps/systemd:audit - Enable support for sys-process/audit
sys-apps/systemd:cgroup-hybrid - Default to hybrid (legacy) cgroup hierarchy instead of unified (modern).
sys-apps/systemd:cryptsetup - Enable cryptsetup tools (includes unit generator for crypttab)
sys-apps/systemd:curl - Enable support for uploading journals
sys-apps/systemd:dns-over-tls - Enable DNS-over-TLS support
sys-apps/systemd:elfutils - Enable coredump stacktraces in the journal
sys-apps/systemd:gcrypt - Enable sealing of journal files using gcrypt
sys-apps/systemd:gnuefi - Enable EFI boot manager and stub loader (built using sys-boot/gnu-efi)
sys-apps/systemd:homed - Enable portable home directories
sys-apps/systemd:http - Enable embedded HTTP server in journald
sys-apps/systemd:hwdb - Enable support for the hardware database
sys-apps/systemd:importd - Enable import daemon
sys-apps/systemd:kmod - Enable kernel module loading via sys-apps/kmod
sys-apps/systemd:lz4 - Enable lz4 compression for the journal
sys-apps/systemd:nat - Enable support for network address translation in networkd
sys-apps/systemd:pkcs11 - Enable PKCS#11 support for cryptsetup and homed
sys-apps/systemd:pwquality - Enable password quality checking in homed
sys-apps/systemd:qrcode - Enable qrcode output support in journal
sys-apps/systemd:repart - Enable support for growing/adding partitions
sys-apps/systemd:resolvconf - Install resolvconf symlink for systemd-resolve
sys-apps/systemd:sysv-utils - Install sysvinit compatibility symlinks and manpages for init, telinit, halt, poweroff, reboot, runlevel, and shutdown
sys-apps/systemd:tpm - Enable TPM support
sys-apps/systemd:vanilla - Disable Gentoo-specific behavior and compatibility quirks
sys-apps/systemd:xkb - Depend on x11-libs/libxkbcommon to allow logind to control the X11 keymap
sys-apps/texinfo:standalone - Build standalone version that survives all Portage bugs
sys-boot/grub:device-mapper - Enable support for device-mapper from sys-fs/lvm2
sys-boot/grub:efiemu - Build and install the efiemu runtimes
sys-boot/grub:fonts - Build and install fonts for the gfxterm module
sys-boot/grub:libzfs - Enable support for sys-fs/zfs
sys-boot/grub:mount - Build and install the grub-mount utility
sys-boot/grub:themes - Build and install GRUB themes (starfield)
sys-boot/grub:truetype - Build and install grub-mkfont conversion utility
sys-boot/loongarch-acpi-tables-fix:dracut - Install dracut config file for automatically including ACPI tables from this package
sys-boot/loongarch-acpi-tables-fix:initrd - Install an early initrd ready for use into /boot
sys-devel/binutils:cet - Enable Intel Control-flow Enforcement Technology.
sys-devel/binutils:default-gold - Set ld to point to ld.gold instead of ld.bfd
sys-devel/binutils:gold - Build ld.gold linker
sys-devel/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
sys-devel/binutils:plugins - Enable plugin support in tools
sys-devel/gcc:ada - Build the ADA language (GNAT) frontend
sys-devel/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
sys-devel/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
sys-devel/gcc:d - Enable support for the D programming language
sys-devel/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
sys-devel/gcc:gcj - Build the GCJ Java language frontend.
sys-devel/gcc:go - Build the GCC Go language frontend.
sys-devel/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
sys-devel/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
sys-devel/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
sys-devel/gcc:lto - Build using Link Time Optimizations (LTO)
sys-devel/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
sys-devel/gcc:nptl - Enable support for Native POSIX Threads Library, the new threading module (requires linux-2.6 or better usually)
sys-devel/gcc:objc - Build support for the Objective C code language
sys-devel/gcc:objc++ - Build support for the Objective C++ language
sys-devel/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
sys-devel/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
sys-devel/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
sys-devel/gcc:ssp - Build packages with stack smashing protector on by default
sys-devel/gcc:systemtap - enable systemtap static probe points
sys-devel/gcc:valgrind - Enable valgrind annotations for gcc internals (useful for gcc debugging).
sys-devel/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
sys-devel/gdb:cet - Enable Intel Control-flow Enforcement Technology.
sys-devel/gdb:lzma - Support lzma compression in ELF debug info
sys-devel/gdb:multitarget - Support all known targets in one gdb binary
sys-devel/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
sys-devel/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
sys-devel/gdb:source-highlight - Enable listing highlighting via dev-util/source-highlight
sys-devel/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
sys-devel/gdb:xxhash - Use dev-libs/xxhash to speed up internal hashing.
sys-fs/erofs-utils:fuse - Builds erofsfuse (requires sys-fs/fuse).
sys-fs/erofs-utils:uuid - Enables UUID support via sys-apps/util-linux.
sys-fs/udev:kmod - Enable kernel module loading/unloading support using sys-apps/kmod
sys-kernel/genkernel:firmware - Prefer system firmware sys-kernel/linux-firmware over local copy.
sys-libs/binutils-libs:64-bit-bfd - Support 64-bit targets even on 32-bit hosts (is ignored on 64-bit hosts)
sys-libs/binutils-libs:cet - Enable Intel Control-flow Enforcement Technology.
sys-libs/binutils-libs:multitarget - Enable all possible targets in libbfd
sys-libs/glibc:cet - Enable Intel Control-flow Enforcement Technology (needs binutils 2.29 and gcc 8)
sys-libs/glibc:clone3 - Enable the new clone3 syscall within glibc. Can be disabled to allow compatibility with older Electron applications.
sys-libs/glibc:compile-locales - build *all* locales in src_install; this is generally meant for stage building only as it ignores /etc/locale.gen file and can be pretty slow
sys-libs/glibc:crypt - build and install libcrypt and crypt.h
sys-libs/glibc:debug - When USE=hardened, allow fortify/stack violations to dump core (SIGABRT) and not kill self (SIGKILL)
sys-libs/glibc:gd - build memusage and memusagestat tools
sys-libs/glibc:multiarch - enable optimizations for multiple CPU architectures (detected at runtime)
sys-libs/glibc:multilib-bootstrap - Provide prebuilt libgcc.a and crt files if missing. Only needed for ABI switch.
sys-libs/glibc:nscd - Build, and enable support for, the Name Service Cache Daemon
sys-libs/glibc:ssp - protect stack of glibc internals
sys-libs/glibc:static-pie - Enable static PIE support (runtime files for -static-pie gcc option).
sys-libs/glibc:suid - Make internal pt_chown helper setuid -- not needed if using Linux and have /dev/pts mounted with gid=5
sys-libs/glibc:systemtap - enable systemtap static probe points
sys-libs/libxcrypt:compat - Build with compatibility interfaces for other crypt implementations
sys-libs/libxcrypt:system - Install as system libcrypt.so rather than to an alternate directory (will collide with sys-libs/glibc's version)
virtual/linux-sources:firmware - Install linux kernel firmware
