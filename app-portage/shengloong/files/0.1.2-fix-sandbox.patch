https://github.com/xen0n/shengloong/commit/3de8273ebdea58c28cb682b45f081b6f8a085a0d
From: WANG Xuerui <xen0n@gentoo.org>
Date: Tue, 10 May 2022 16:50:10 +0800
Subject: [PATCH] test: we cannot run outdated-symver programs in Gentoo
 sandbox

--- a/tests/_common.sh
+++ b/tests/_common.sh
@@ -78,3 +78,14 @@ run_loong_binary_at_sysroot() {
 	echo "note: install qemu-loongarch64 or use native hardware" >&2
 	exit 77
 }
+
+assert_sha256sum() {
+	local expected="$1"
+	local filename="$2"
+
+	local output="$(sha256sum "$filename")"
+	output="${output:0:64}"
+	if [[ $expected != $output ]]; then
+		dief 'sha256sum assertion failed for %s: expected %s, got %s' "$filename" "$expected" "$output"
+	fi
+}
--- a/tests/e2e-smoke/runtest.sh
+++ b/tests/e2e-smoke/runtest.sh
@@ -43,52 +43,84 @@ mkdir "$workdir_new/bin" || dief 'mkdir failed'
 cp "$test_prog_old" "$workdir_new/bin/test.old" || dief 'cp failed'
 cp "$test_prog_new" "$workdir_new/bin/test.new" || dief 'cp failed'
 
+# The Gentoo sandbox can't itself work in sysroots with different glibc
+# symver, so the sanity will fail even if running natively, during normal
+# emerges of this package.
+#
+# We assume this case and fall back to blindly running and comparing
+# checksums, if the sanity check fails. Unexpected outputs can still be caught
+# this way.
+should_run_progs=true
 info "sanity test: can run $old_symver binary in $old_symver sysroot"
-run_loong_binary_at_sysroot "$workdir_old" bin/test.old || dief 'sanity check failed'
-echo
+if ! run_loong_binary_at_sysroot "$workdir_old" bin/test.old; then
+	info 'cannot run old-symver binary with matching sysroot, we might be in a Gentoo sandbox'
+	info 'falling back to checksumming only'
+	should_run_progs=false
+fi
 
-info "sanity test: can run $new_symver binary in $new_symver sysroot"
-run_loong_binary_at_sysroot "$workdir_new" bin/test.new || dief 'sanity check failed'
-echo
+if "$should_run_progs"; then
+	info "sanity test: can run $new_symver binary in $new_symver sysroot"
+	run_loong_binary_at_sysroot "$workdir_new" bin/test.new || dief 'sanity check failed'
+	echo
 
-info "sanity test: cannot run $old_symver binary in $new_symver sysroot"
-run_loong_binary_at_sysroot "$workdir_new" bin/test.old && dief 'sanity check failed'
-echo
+	info "sanity test: cannot run $old_symver binary in $new_symver sysroot"
+	run_loong_binary_at_sysroot "$workdir_new" bin/test.old && dief 'sanity check failed'
+	echo
 
-info "sanity test: cannot run $new_symver binary in $old_symver sysroot"
-run_loong_binary_at_sysroot "$workdir_old" bin/test.new && dief 'sanity check failed'
-echo
+	info "sanity test: cannot run $new_symver binary in $old_symver sysroot"
+	run_loong_binary_at_sysroot "$workdir_old" bin/test.new && dief 'sanity check failed'
+	echo
+fi
 
 info 'update the old sysroot (this time only libs)'
 "$sl_prog" -f "GLIBC_$old_symver" -t "GLIBC_$new_symver" -v "$workdir_old/lib64" || dief 'shengloong failed'
 echo
 
-info "should no longer be able to run $old_symver binary in the old sysroot"
-run_loong_binary_at_sysroot "$workdir_old" bin/test.old && dief 'assertion failed'
-echo
+# both should be modified
+assert_sha256sum 55a4118c07340126be958cc9f5e24d5f1a7966590b6a2d0e315166c4e326ddc6 "$workdir_old/lib64/ld-linux-loongarch-lp64d.so.1"
+assert_sha256sum baa94e1bdd823404cb6b4ba23c356c262f70f0288df3060c9fc4771c8c337e05 "$workdir_old/lib64/libc.so.6"
 
-info "should now be able to run $new_symver binary in the old sysroot"
-run_loong_binary_at_sysroot "$workdir_old" bin/test.new || dief 'assertion failed'
-echo
+if "$should_run_progs"; then
+	info "should no longer be able to run $old_symver binary in the old sysroot"
+	run_loong_binary_at_sysroot "$workdir_old" bin/test.old && dief 'assertion failed'
+	echo
+
+	info "should now be able to run $new_symver binary in the old sysroot"
+	run_loong_binary_at_sysroot "$workdir_old" bin/test.new || dief 'assertion failed'
+	echo
+fi
 
 info 'update the old programs'
 "$sl_prog" -f "GLIBC_$old_symver" -t "GLIBC_$new_symver" -v "$workdir_old/bin" || dief 'shengloong failed'
 echo
 
-info "should now be able to run upgraded $old_symver binary in the old sysroot"
-run_loong_binary_at_sysroot "$workdir_old" bin/test.old || dief 'assertion failed'
-echo
+# this file should get modified
+assert_sha256sum 216943dcfe25a2f4a79043558fe6642cbf068dfb0699684c3ff29e4664ef6e56 "$workdir_old/bin/test.old"
+# this file should stay intact
+assert_sha256sum 2e63e339621de1b742be8ac710c68bff4442bef4928bd65b62593f97592bc2c0 "$workdir_old/bin/test.new"
+
+if "$should_run_progs"; then
+	info "should now be able to run upgraded $old_symver binary in the old sysroot"
+	run_loong_binary_at_sysroot "$workdir_old" bin/test.old || dief 'assertion failed'
+	echo
+fi
 
 info 'update the programs in new sysroot'
 "$sl_prog" -f "GLIBC_$old_symver" -t "GLIBC_$new_symver" -v "$workdir_new/bin" || dief 'shengloong failed'
 echo
 
-info "should now be able to run upgraded $old_symver binary in the new sysroot"
-run_loong_binary_at_sysroot "$workdir_new" bin/test.old || dief 'assertion failed'
-echo
+# result should be deterministic
+assert_sha256sum 216943dcfe25a2f4a79043558fe6642cbf068dfb0699684c3ff29e4664ef6e56 "$workdir_new/bin/test.old"
+assert_sha256sum 2e63e339621de1b742be8ac710c68bff4442bef4928bd65b62593f97592bc2c0 "$workdir_new/bin/test.new"
 
-info "$new_symver binary in the new sysroot shouldn't get broken"
-run_loong_binary_at_sysroot "$workdir_new" bin/test.new || dief 'assertion failed'
-echo
+if "$should_run_progs"; then
+	info "should now be able to run upgraded $old_symver binary in the new sysroot"
+	run_loong_binary_at_sysroot "$workdir_new" bin/test.old || dief 'assertion failed'
+	echo
+
+	info "$new_symver binary in the new sysroot shouldn't get broken"
+	run_loong_binary_at_sysroot "$workdir_new" bin/test.new || dief 'assertion failed'
+	echo
+fi
 
 info 'all passed!'
