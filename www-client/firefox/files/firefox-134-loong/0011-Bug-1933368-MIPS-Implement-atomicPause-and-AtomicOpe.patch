From de8e9400acd774ecbbb57c4f1385b81f3b5bbc26 Mon Sep 17 00:00:00 2001
From: Xuan Chen <chenx97@aosc.io>
Date: Tue, 31 Dec 2024 23:32:41 +0800
Subject: [PATCH 11/14] Bug 1933368 - [MIPS] Implement atomicPause and
 AtomicOperations::pause. r=anba

This patch implements the missing mips implementation of Bug 1930952.

It also removes the check for JS_SIMULATOR_MIPS32 from AtomicOperations.h
because x86 is guaranteed to have JS_HAVE_GENERATED_ATOMIC_OPS.

Differential Revision: https://phabricator.services.mozilla.com/D230200
---
 js/src/jit/AtomicOperations.h                         |  2 +-
 js/src/jit/mips-shared/AtomicOperations-mips-shared.h | 10 ++++++++++
 js/src/jit/mips-shared/MacroAssembler-mips-shared.cpp |  2 ++
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/js/src/jit/AtomicOperations.h b/js/src/jit/AtomicOperations.h
index 22c13c522841..4fecacb7126f 100644
--- a/js/src/jit/AtomicOperations.h
+++ b/js/src/jit/AtomicOperations.h
@@ -346,7 +346,7 @@ constexpr inline bool AtomicOperations::isLockfreeJS(int32_t size) {
 
 #ifdef JS_HAVE_GENERATED_ATOMIC_OPS
 #  include "jit/shared/AtomicOperations-shared-jit.h"
-#elif defined(JS_SIMULATOR_MIPS32) || defined(__mips__)
+#elif defined(__mips__)
 #  include "jit/mips-shared/AtomicOperations-mips-shared.h"
 #else
 #  include "jit/shared/AtomicOperations-feeling-lucky.h"
diff --git a/js/src/jit/mips-shared/AtomicOperations-mips-shared.h b/js/src/jit/mips-shared/AtomicOperations-mips-shared.h
index f48a4b6deba9..7deb11a731dd 100644
--- a/js/src/jit/mips-shared/AtomicOperations-mips-shared.h
+++ b/js/src/jit/mips-shared/AtomicOperations-mips-shared.h
@@ -77,6 +77,16 @@ inline void js::jit::AtomicOperations::fenceSeqCst() {
   __atomic_thread_fence(__ATOMIC_SEQ_CST);
 }
 
+namespace js {
+namespace jit {
+
+inline void AtomicPause() { asm volatile("sync" ::: "memory"); }
+
+}  // namespace jit
+}  // namespace js
+
+inline void js::jit::AtomicOperations::pause() { AtomicPause(); }
+
 template <typename T>
 inline T js::jit::AtomicOperations::loadSeqCst(T* addr) {
   static_assert(sizeof(T) <= sizeof(void*),
diff --git a/js/src/jit/mips-shared/MacroAssembler-mips-shared.cpp b/js/src/jit/mips-shared/MacroAssembler-mips-shared.cpp
index e25bf94a1bbb..a3706933d113 100644
--- a/js/src/jit/mips-shared/MacroAssembler-mips-shared.cpp
+++ b/js/src/jit/mips-shared/MacroAssembler-mips-shared.cpp
@@ -2973,6 +2973,8 @@ void MacroAssembler::atomicEffectOpJS(Scalar::Type arrayType,
                  offsetTemp, maskTemp);
 }
 
+void MacroAssembler::atomicPause() { as_sync(); }
+
 void MacroAssembler::flexibleQuotient32(Register rhs, Register srcDest,
                                         bool isUnsigned,
                                         const LiveRegisterSet&) {
-- 
2.48.1

