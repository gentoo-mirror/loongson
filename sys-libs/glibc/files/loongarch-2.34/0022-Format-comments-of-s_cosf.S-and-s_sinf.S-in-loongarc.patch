From 11b9d4fcff0f06bdf4a6ca00b95c59fdae3421c7 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Tue, 17 Aug 2021 15:07:28 +0800
Subject: [PATCH 22/54] Format comments of s_cosf.S and s_sinf.S in loongarch

---
 sysdeps/loongarch/lp64/s_cosf.S | 71 ++++++++++++++++++---------------
 sysdeps/loongarch/lp64/s_sinf.S | 52 +++++++++++++-----------
 2 files changed, 66 insertions(+), 57 deletions(-)

diff --git a/sysdeps/loongarch/lp64/s_cosf.S b/sysdeps/loongarch/lp64/s_cosf.S
index bc4edec86b..4207fd2563 100644
--- a/sysdeps/loongarch/lp64/s_cosf.S
+++ b/sysdeps/loongarch/lp64/s_cosf.S
@@ -97,7 +97,7 @@ LEAF(COSF)
 	.align		2
 	.align		3
 
-/* fa0 is SP x; fa1 is DP x */
+	/* fa0 is SP x; fa1 is DP x */
 	movfr2gr.s	t0, fa0			/* Bits of x */
 	fcvt.d.s	fa1, fa0		/* DP x */
 	li.w		t1, 0x7fffffff
@@ -111,7 +111,8 @@ LEAF(COSF)
 	bgeu		t0, t1, L(greater_or_equal_9pio4)
 
 /* L(median_args): */
-	/* Here if Pi/4<=|x|<9*Pi/4 */
+
+/* Here if Pi/4<=|x|<9*Pi/4 */
 	fabs.d		fa0, fa1		/* DP |x| */
 	fld.d		fa1, t4, 56		/* 4/Pi */
 	fmul.d		fa1, fa1, fa0		/* DP |x|/(Pi/4) */
@@ -124,23 +125,26 @@ LEAF(COSF)
 	addi.w		t0, t0, 2		/* n = k+3 */
 	fsub.d		fa0, fa0, fa1		/* t = |x| - j * Pi/2 */
 
-/* Input: t0=n fa0=t*/
+	/* Input: t0=n fa0=t */
 L(reduced):
 
 /* Here if cos(x) calculated using cos(t) polynomial for |t|<Pi/4:
-	* y = t*t; z = y*y;
-	* s = sign(x) * (-1.0)^((n>>2)&1)
-	* result = s * (1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))))
-
-	* Here if cos(x) calculated using sin(t) polynomial for |t|<Pi/4:
-	* y = t*t; z = y*y;
-	* s = sign(x) * (-1.0)^((n>>2)&1)
-	* result = s * t * (1.0+t^2*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))))
-	*/
+ * y = t*t; z = y*y;
+ * s = sign(x) * (-1.0)^((n>>2)&1)
+ * result = s * (1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))))
+
+ * Here if cos(x) calculated using sin(t) polynomial for |t|<Pi/4:
+ * y = t*t; z = y*y;
+ * s = sign(x) * (-1.0)^((n>>2)&1)
+ * result = s * t * (1.0+t^2*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))))
+ */
+
 /* TODO: what is the best order ??? */
+
 /* load-to-use latency, hardware module usage, integer pipeline & float
  * pipeline */
-/* cancel branch */
+
+	/* cancel branch */
 	slli.w		t0, t0, 1		/* (n << 1) */
 	andi		t1, t0, 4		/* (n << 1) & 4 */
 	alsl.d		t2, t1, t4, 4		/* adjust to DP_C or DP_S */
@@ -173,11 +177,12 @@ L_return:
 L(greater_or_equal_9pio4):
 
 /* Here if |x|>=9*Pi/4 */
-	li.w		t1, 0x7f800000		/* x is Inf or NaN?  */
+	li.w		t1, 0x7f800000		/* x is Inf or NaN? */
 	bgeu		t0, t1, L(inf_or_nan)	/* |x| >= Inf branch */
 
 /* Here if finite |x|>=9*Pi/4 */
 	li.w		t1, 0x4b000000		/* 2^23  */
+
 	/* |x| >= 2^23 branch */
 	bgeu		t0, t1, L(greater_or_equal_2p23)
 
@@ -201,20 +206,20 @@ L(greater_or_equal_2p23):
 /* Here if finite |x|>=2^23 */
 	fabs.s		fa5, fa0		/* SP |x| */
 
-/* bitpos = (ix>>23) - BIAS_32; */
-/*TODO???srai.w eb = biased exponent of x */
+	/* bitpos = (ix>>23) - BIAS_32; */
+	/* TODO???srai.w eb = biased exponent of x */
 	srli.w		t0, t0, 23
 
-/* bitpos = eb - 0x7f + 59, where 0x7f is exponent bias */
+	/* bitpos = eb - 0x7f + 59, where 0x7f is exponent bias */
 	addi.w		t0, t0, -124		/* t0 = bitpos */
 
-/* t3= j = bitpos/28 */
-/* x/28 = (x * ((0x100000000 / 28) + 1)) >> 32 */
+	/* t3= j = bitpos/28 */
+	/* x/28 = (x * ((0x100000000 / 28) + 1)) >> 32 */
 	li.w		t1, 0x924924a
 	mulh.wu		t0, t1, t0
 	fcvt.d.s	fa5, fa5		/* Convert to double */
 
-/* TODO: what is the best order ??? */
+	/* TODO: what is the best order ??? */
 	la.local	t1, L(invpio4_table) 	/* t2 */
 	alsl.d		t1, t0, t1, 3
 	fld.d		fa0, t1, 0	/* invpio4_table[j] */
@@ -226,8 +231,8 @@ L(greater_or_equal_2p23):
 	fmul.d		fa2, fa2, fa5	/* c = invpio4_table[j+2]*|x| */
 	fmul.d		fa3, fa3, fa5	/* d = invpio4_table[j+3]*|x| */
 
-/*TODO: overflow check*/
-/*uint64_t l = a; TODO: change the order*/
+	/* TODO: overflow check */
+	/* uint64_t l = a; TODO: change the order */
 
 	FTOL(t0, fa0, fa4)
 	li.w		t1, -8		/* 0xfffffffffffffff8 */
@@ -236,18 +241,18 @@ L(greater_or_equal_2p23):
 	fsub.d		fa0, fa0, fa4	/* a -= l; */
 	fadd.d		fa4, fa0, fa1	/* fa4 double e = a + b; */
 
-/*TODO: overflow check*/
+	/* TODO: overflow check */
 	FTOL(t0, fa4, fa4)		/* uint64_t l = e; */
 	andi		t2, t0, 1	/* l & 1 TODO: change the order */
 	LOADFD(fa5, t1, L(DP_ONES))	/* fa5 = 1.0 */
 	LTOF(fa4, t0, fa4)		/* fa4 DP l */
 
-/* critical!!!! the order */
+	/* critical!!!! the order */
 	fsub.d		fa0, fa0, fa4
 	fld.d		fa4, t4, 120	/* PI_4 */
 	beqz		t2, L_even_integer
 
-/*L_odd_integer:*/
+/* L_odd_integer: */
 	fsub.d		fa0, fa0, fa5
 	fadd.d		fa0, fa0, fa1
 	fadd.d		fa2, fa2, fa3
@@ -263,7 +268,7 @@ L_even_integer:
 	addi.d		t0, t0, 3
 	bcnez		$fcc0, L_leq_one
 
-/*L_gt_one:*/
+/* L_gt_one: */
 	fld.d		fa2, t1, 16		/* 2.0 */
 	addi.d		t0, t0, 1
 	fsub.d		fa0, fa0, fa2
@@ -343,12 +348,13 @@ L(less_2pn27):
 	LOADFS(fa1, t0, L(SP_ONE))		/* 1.0 */
 	fsub.s		fa0, fa1, fa0		/* 1.0 - abstheta */
 
-/* No need to convert */
+	/* No need to convert */
 	jr		ra
 
 L(inf_or_nan):
 
 /* Here if |x| is Inf or NAN */
+
 	/* in case of x is NaN */
 	bne		t0, t1, L_skip_errno_setting
 	la.tls.ie	t0, errno
@@ -400,12 +406,11 @@ L(invpio4_table):	/* 4/Pi broken into sum of positive DP values */
 	.word	0x7c000000
 	.word	0x3560e410
 
-/* Coefficients of polynomial
-	for sin(x)~=x+x^3*DP_SIN2_0+x^5*DP_SIN2_1, |x|<2^-5.
- */
-/* Coefficients of polynomial
-	for sin(t)~=t+t^3*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))), |t|<Pi/4.
-	for cos(t)~=1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))), |t|<Pi/4.
+/*  Coefficients of polynomial
+ *         for sin(x)~=x+x^3*DP_SIN2_0+x^5*DP_SIN2_1, |x|<2^-5.
+ *  Coefficients of polynomial
+ *         for sin(t)~=t+t^3*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))), |t|<Pi/4.
+ *         for cos(t)~=1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))), |t|<Pi/4.
  */
 
 	.align		3
diff --git a/sysdeps/loongarch/lp64/s_sinf.S b/sysdeps/loongarch/lp64/s_sinf.S
index 0606877e57..3f06f46ff9 100644
--- a/sysdeps/loongarch/lp64/s_sinf.S
+++ b/sysdeps/loongarch/lp64/s_sinf.S
@@ -97,7 +97,7 @@ LEAF(SINF)
 	.align		2
 	.align		3
 
-/* fa0 is SP x; fa1 is DP x */
+	/* fa0 is SP x; fa1 is DP x */
 	movfr2gr.s	t2, fa0			/* Bits of x */
 	fcvt.d.s	fa1, fa0		/* DP x */
 	li.w		t1, 0x7fffffff
@@ -125,8 +125,8 @@ LEAF(SINF)
 	fld.d		fa1, t1, 0		/* j*Pi/2 */
 	fsub.d		fa0, fa0, fa1		/* t = |x| - j * Pi/2 */
 
-/* Input: t0=n fa0=t*/
-/* Input: t0=n fa0=t, t5=sign(x) */
+	/* Input: t0=n fa0=t*/
+	/* Input: t0=n fa0=t, t5=sign(x) */
 L(reduced):
 
 /* Here if cos(x) calculated using cos(t) polynomial for |t|<Pi/4:
@@ -138,10 +138,13 @@ L(reduced):
  * s = sign(x) * (-1.0)^((n>>2)&1)
  * result = s * t * (1.0+t^2*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))))
  */
+
 /* TODO: what is the best order ??? */
+
 /* load-to-use latency, hardware module usage, integer pipeline & float
 pipeline */
-/* cancel branch */
+
+	/* cancel branch */
 	slli.w		t0, t0, 1	/* (n << 1) */
 	andi		t1, t0, 4	/* (n << 1) & 4 */
 	alsl.d		t2, t1, t4, 4	/* adjust to DP_C or DP_S */
@@ -176,7 +179,7 @@ L_return:
 L(greater_or_equal_9pio4):
 
 /* Here if |x|>=9*Pi/4 */
-	li.w		t1, 0x7f800000		/* x is Inf or NaN?	*/
+	li.w		t1, 0x7f800000		/* x is Inf or NaN? */
 	bgeu		t0, t1, L(inf_or_nan)	/* |x| >= Inf branch */
 
 /* Here if finite |x|>=9*Pi/4 */
@@ -204,20 +207,20 @@ L(greater_or_equal_2p23):
 /* Here if finite |x|>=2^23 */
 	fabs.s		fa5, fa0	/* SP |x| */
 
-/* bitpos = (ix>>23) - BIAS_32; */
-/*TODO???srai.w eb = biased exponent of x */
+	/* bitpos = (ix>>23) - BIAS_32; */
+	/* TODO???srai.w eb = biased exponent of x */
 	srli.w		t0, t0, 23
 
-/* bitpos = eb - 0x7f + 59, where 0x7f is exponent bias */
+	/* bitpos = eb - 0x7f + 59, where 0x7f is exponent bias */
 	addi.w		t0, t0, -124	/* t0 = bitpos */
 
-/* t3= j = bitpos/28 */
-/* x/28 = (x * ((0x100000000 / 28) + 1)) >> 32 */
+	/* t3= j = bitpos/28 */
+	/* x/28 = (x * ((0x100000000 / 28) + 1)) >> 32 */
 	li.w		t1, 0x924924a
 	mulh.wu		t0, t1, t0
 	fcvt.d.s	fa5, fa5	/* Convert to double */
 
-/* TODO: what is the best order ??? */
+	/* TODO: what is the best order ??? */
 	la.local	t1, L(invpio4_table)/* t2 */
 	alsl.d		t1, t0, t1, 3
 	fld.d		fa0, t1, 0	/* invpio4_table[j] */
@@ -229,8 +232,8 @@ L(greater_or_equal_2p23):
 	fmul.d		fa2, fa2, fa5	/* c = invpio4_table[j+2]*|x| */
 	fmul.d		fa3, fa3, fa5	/* d = invpio4_table[j+3]*|x| */
 
-/* TODO: overflow check*/
-/*uint64_t l = a; TODO: change the order*/
+	/* TODO: overflow check */
+	/* uint64_t l = a; TODO: change the order */
 	FTOL(t0, fa0, fa4)
 	li.w		t1, -8		/* 0xfffffffffffffff8 */
 	and 		t0, t0, t1	/* l &= ~0x7; */
@@ -238,18 +241,18 @@ L(greater_or_equal_2p23):
 	fsub.d		fa0, fa0, fa4	/* a -= l; */
 	fadd.d		fa4, fa0, fa1	/* fa4 double e = a + b; */
 
-/* TODO: overflow check*/
+	/* TODO: overflow check */
 	FTOL(t0, fa4, fa4)		/* uint64_t l = e */
 	andi		t2, t0, 1	/* l & 1 TODO: change the order */
 	LOADFD(fa5, t1, L(DP_ONES))	/* fa5 = 1.0 */
 	LTOF(fa4, t0, fa4)		/* fa4 DP l */
 
-/* critical!!!! the order */
+	/* critical!!!! the order */
 	fsub.d		fa0, fa0, fa4
 	fld.d		fa4, t4, 120	/* PI_4 */
 	beqz		t2, L_even_integer
 
-/*L_odd_integer:*/
+/* L_odd_integer: */
 	fsub.d		fa0, fa0, fa5
 	fadd.d		fa0, fa0, fa1
 	fadd.d		fa2, fa2, fa3
@@ -266,7 +269,7 @@ L_even_integer:
 	addi.d		t0, t0, 1
 	bcnez		$fcc0, L_leq_one
 
-/*L_gt_one:*/
+/* L_gt_one: */
 	fld.d		fa2, t1, 16		/* 2.0 */
 	addi.d		t0, t0, 1
 	fsub.d		fa0, fa0, fa2
@@ -281,6 +284,7 @@ L(arg_less_pio4):
 	blt 		t0, t1, L(less_2pn5)	/* |x| < 2^-5 branch */
 
 /* Here if 2^-5<=|x|<Pi/4 */
+
 /*
  * Chebyshev polynomial of the form:
  * 1.0+x^2*(C0+x^2*(C1+x^2*(C2+x^2*(C3+x^2*C4)))).
@@ -333,6 +337,7 @@ L(eq_zero):
 L(inf_or_nan):
 
 /* Here if |x| is Inf or NAN */
+
 	/* in case of x is NaN */
 	bne 		t0, t1, L_skip_errno_setting
 	la.tls.ie	t0, errno
@@ -385,14 +390,13 @@ L(invpio4_table):		/* 4/Pi broken into sum of positive DP values */
 	.word	0x7c000000
 	.word	0x3560e410
 
+/*  Coefficients of polynomial
+ *         for sin(x)~=x+x^3*DP_SIN2_0+x^5*DP_SIN2_1, |x|<2^-5.
+ *  Coefficients of polynomial
+ *         for sin(t)~=t+t^3*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))), |t|<Pi/4.
+ *         for cos(t)~=1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))), |t|<Pi/4.
+ */
 
-/* Coefficients of polynomial
-	for sin(x)~=x+x^3*DP_SIN2_0+x^5*DP_SIN2_1, |x|<2^-5.  */
-
-/* Coefficients of polynomial
-	for sin(t)~=t+t^3*(S0+t^2*(S1+t^2*(S2+t^2*(S3+t^2*S4)))), |t|<Pi/4.
-	for cos(t)~=1.0+t^2*(C0+t^2*(C1+t^2*(C2+t^2*(C3+t^2*C4)))), |t|<Pi/4.
-*/
 	.align		3
 	.type		L(DP_), @object
 	.size		L(DP_), 128
-- 
2.34.0

