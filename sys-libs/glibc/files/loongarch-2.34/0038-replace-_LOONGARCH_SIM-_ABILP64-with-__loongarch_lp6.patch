From 1962bbcd32b94936b672828ab4d0bacfaf68bd48 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Fri, 26 Nov 2021 17:59:32 +0800
Subject: [PATCH 38/51] replace _LOONGARCH_SIM, _ABILP64 with __loongarch_lp64

---
 sysdeps/loongarch/Makefile                      | 2 +-
 sysdeps/loongarch/dl-machine.h                  | 2 +-
 sysdeps/loongarch/dl-trampoline.S               | 6 +++---
 sysdeps/loongarch/nptl/bits/pthreadtypes-arch.h | 2 +-
 sysdeps/loongarch/start.S                       | 2 +-
 sysdeps/loongarch/sys/asm.h                     | 2 +-
 sysdeps/loongarch/sys/regdef.h                  | 2 +-
 sysdeps/unix/sysv/linux/loongarch/clone.S       | 2 +-
 sysdeps/unix/sysv/linux/loongarch/clone3.S      | 2 +-
 sysdeps/unix/sysv/linux/loongarch/ldconfig.h    | 2 +-
 10 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/sysdeps/loongarch/Makefile b/sysdeps/loongarch/Makefile
index 8202ee234f..41c3449670 100644
--- a/sysdeps/loongarch/Makefile
+++ b/sysdeps/loongarch/Makefile
@@ -12,4 +12,4 @@ ifeq (,$(filter $(default-abi),$(abi-variants)))
 $(error Unknown ABI $(default-abi), must be one of $(abi-variants))
 endif
 
-abi-lp64-condition    := defined _ABILP64
+abi-lp64-condition    := defined __loongarch_lp64
diff --git a/sysdeps/loongarch/dl-machine.h b/sysdeps/loongarch/dl-machine.h
index 39ca235c5d..823a9f9f27 100644
--- a/sysdeps/loongarch/dl-machine.h
+++ b/sysdeps/loongarch/dl-machine.h
@@ -65,7 +65,7 @@ elf_machine_matches_host (const ElfW (Ehdr) * ehdr)
   if (ehdr->e_machine != EM_LOONGARCH)
     return 0;
 
-#ifdef _ABILP64
+#ifdef __loongarch_lp64
   if ((ehdr->e_flags & EF_LARCH_ABI) != EF_LARCH_ABI_LP64)
 #else
 #error "Unknown ABI"
diff --git a/sysdeps/loongarch/dl-trampoline.S b/sysdeps/loongarch/dl-trampoline.S
index 68355f4fde..dcc8f50429 100644
--- a/sysdeps/loongarch/dl-trampoline.S
+++ b/sysdeps/loongarch/dl-trampoline.S
@@ -31,7 +31,7 @@
 ENTRY (_dl_runtime_resolve)
 
 	/* Save arguments to stack. */
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	addi.d	sp, sp, -FRAME_SIZE
 #else
 #error "32bit LoongArch systems are not supported"
@@ -59,7 +59,7 @@ ENTRY (_dl_runtime_resolve)
 #endif
 
 	/* Update .got.plt and obtain runtime address of callee */
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	slli.d	a1, t1, 1
 	or	a0, t0, zero
 	add.d	a1, a1, t1
@@ -92,7 +92,7 @@ ENTRY (_dl_runtime_resolve)
 	FREG_L	fa7, sp, 10*SZREG + 7*SZFREG
 #endif
 
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	addi.d	sp, sp, FRAME_SIZE
 #else
 #error "32bit LoongArch systems are not supported"
diff --git a/sysdeps/loongarch/nptl/bits/pthreadtypes-arch.h b/sysdeps/loongarch/nptl/bits/pthreadtypes-arch.h
index 221526d5fd..d697fff735 100644
--- a/sysdeps/loongarch/nptl/bits/pthreadtypes-arch.h
+++ b/sysdeps/loongarch/nptl/bits/pthreadtypes-arch.h
@@ -21,7 +21,7 @@
 
 #include <bits/endian.h>
 
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 #define __SIZEOF_PTHREAD_ATTR_T 56
 #define __SIZEOF_PTHREAD_MUTEX_T 40
 #define __SIZEOF_PTHREAD_MUTEXATTR_T 4
diff --git a/sysdeps/loongarch/start.S b/sysdeps/loongarch/start.S
index 8854468a38..afe190739d 100644
--- a/sysdeps/loongarch/start.S
+++ b/sysdeps/loongarch/start.S
@@ -48,7 +48,7 @@ ENTRY (ENTRY_POINT)
 /* We must get symbol main through GOT table, since main may not be local.
    For instance: googletest defines main in dynamic library.  */
 	la.got		a0, t0, main
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	ld.d		a1, sp, 0
 	addi.d		a2, sp, SZREG
 #else
diff --git a/sysdeps/loongarch/sys/asm.h b/sysdeps/loongarch/sys/asm.h
index cdcd0c187c..678829437d 100644
--- a/sysdeps/loongarch/sys/asm.h
+++ b/sysdeps/loongarch/sys/asm.h
@@ -24,7 +24,7 @@
 #include <sysdeps/generic/sysdep.h>
 
 /* Macros to handle different pointer/register sizes for 32/64-bit code.  */
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 #define PTRLOG 3
 #define SZREG 8
 #define SZFREG 8
diff --git a/sysdeps/loongarch/sys/regdef.h b/sysdeps/loongarch/sys/regdef.h
index e367505f9a..d7889adbf1 100644
--- a/sysdeps/loongarch/sys/regdef.h
+++ b/sysdeps/loongarch/sys/regdef.h
@@ -20,7 +20,7 @@
 #ifndef _SYS_REGDEF_H
 #define _SYS_REGDEF_H
 
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 #define zero $r0
 #define ra $r1
 #define tp $r2
diff --git a/sysdeps/unix/sysv/linux/loongarch/clone.S b/sysdeps/unix/sysv/linux/loongarch/clone.S
index b147529738..2fd1a0d5dc 100644
--- a/sysdeps/unix/sysv/linux/loongarch/clone.S
+++ b/sysdeps/unix/sysv/linux/loongarch/clone.S
@@ -32,7 +32,7 @@
 ENTRY (__clone)
 
 	/* Align stack to 16 or 8 bytes per the ABI.  */
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	bstrins.d	a1, zero, 3, 0
 #else
 #error "32bit LoongArch systems are not supported"
diff --git a/sysdeps/unix/sysv/linux/loongarch/clone3.S b/sysdeps/unix/sysv/linux/loongarch/clone3.S
index 12ff3055e1..fa1abd2779 100644
--- a/sysdeps/unix/sysv/linux/loongarch/clone3.S
+++ b/sysdeps/unix/sysv/linux/loongarch/clone3.S
@@ -66,7 +66,7 @@ L (thread_start3):
 	cfi_undefined (1)
 
 	/* Align stack to 16 or 8 bytes per the ABI.  */
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 	bstrins.d	sp, zero, 3, 0
 #else
 #error "32bit LoongArch systems are not supported"
diff --git a/sysdeps/unix/sysv/linux/loongarch/ldconfig.h b/sysdeps/unix/sysv/linux/loongarch/ldconfig.h
index f034440272..e0a31c4b4c 100644
--- a/sysdeps/unix/sysv/linux/loongarch/ldconfig.h
+++ b/sysdeps/unix/sysv/linux/loongarch/ldconfig.h
@@ -18,7 +18,7 @@
 
 #include <sysdeps/generic/ldconfig.h>
 
-#if _LOONGARCH_SIM == _ABILP64
+#ifdef __loongarch_lp64
 #define SYSDEP_KNOWN_INTERPRETER_NAMES \
   { "/lib64/ld-linux-loongarch-lp64d.so.1", FLAG_ELF_LIBC6 }, \
   { "/lib64/ld-linux-loongarch-lp64s.so.1", FLAG_ELF_LIBC6 },
-- 
2.34.0

